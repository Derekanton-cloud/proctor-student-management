<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%= title %>
    </title>
    <link rel="stylesheet" href="/css/styles.css">
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background-color: #FFDAB9;
            /* Peach background */
            margin: 0;
            padding: 0;
        }

        .dashboard-container {
            max-width: 1200px;
            margin: 2rem auto;
            padding: 2rem;
            background-color: white;
            border-radius: 12px;
            box-shadow: 0 4px 16px rgba(139, 0, 0, 0.1);
        }

        .welcome-header {
            color: #800000;
            /* Maroon text */
            border-bottom: 2px solid #FFDAB9;
            padding-bottom: 1rem;
            margin-bottom: 2rem;
        }

        .dashboard-widgets {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 2rem;
        }

        .widget {
            background-color: #FFF8EE;
            border-radius: 8px;
            padding: 1.5rem;
            box-shadow: 0 2px 8px rgba(139, 0, 0, 0.08);
            margin-top: 30px;
        }

        .widget h3 {
            color: #800000;
            margin-top: 0;
            border-bottom: 1px solid #FFE4B5;
            padding-bottom: 0.5rem;
        }

        .ai-widget {
            background: linear-gradient(to bottom right, #FFF8EE, #FFEFD5);
            border-left: 4px solid #800000;
        }

        .widget-header {
            display: flex;
            align-items: center;
            padding-bottom: 10px;
            border-bottom: 1px solid #FFE4B5;
        }

        .widget-header h3 {
            margin: 0;
            color: #800000;
            font-size: 1.2rem;
        }

        .widget-header i {
            margin-right: 8px;
            color: #800000;
        }

        .widget-content {
            padding: 15px 0;
        }

        .widget-content p {
            margin-top: 0;
            color: #555;
        }

        .ai-features {
            display: flex;
            flex-wrap: wrap;
            margin: 10px 0;
            gap: 10px;
        }

        .ai-feature {
            background-color: rgba(255, 218, 185, 0.5);
            border-radius: 15px;
            padding: 4px 10px;
            font-size: 0.85rem;
            color: #800000;
        }

        .ai-feature i {
            margin-right: 5px;
            color: #800000;
        }

        .recent-students h4 {
            margin: 15px 0 10px 0;
            color: #800000;
            font-size: 1rem;
        }

        .student-select {
            display: block;
            width: 100%;
            padding: 8px;
            margin-bottom: 10px;
            border: 1px solid #FFDAB9;
            border-radius: 4px;
            background-color: white;
        }

        .analyze-btn {
            background-color: #800000;
            color: white;
            border: none;
            border-radius: 4px;
            padding: 8px 15px;
            cursor: pointer;
            font-weight: 500;
            width: 100%;
        }

        .analysis-preview {
            margin: 15px 0;
            padding: 10px;
            background-color: white;
            border-radius: 4px;
            border-left: 3px solid #800000;
            font-size: 0.9rem;
            max-height: 120px;
            overflow-y: auto;
            display: none;
        }

        .ai-button {
            display: block;
            text-align: center;
            background-color: #800000;
            color: white;
            padding: 10px;
            border-radius: 4px;
            text-decoration: none;
            margin-top: 15px;
            font-weight: 500;
            transition: background-color 0.2s;
        }
        
        .ai-button:hover {
            background-color: #990000;
            text-decoration: none;
            color: white;
        }
        
        .ai-button i {
            margin-right: 5px;
        }
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
</head>

<body>
    <div class="dashboard-container">
        <div class="welcome-header">
            <h1>Proctor Dashboard</h1>
            <p>Welcome, <%= user.name %>!</p>
        </div>

        <div class="dashboard-widgets">
            <div class="widget">
                <h3>Your Profile</h3>
                <p><strong>Email:</strong>
                    <%= user.email %>
                </p>
                <p><strong>Role:</strong>
                    <%= user.role %>
                </p>
                <!-- Add more profile details as needed -->
            </div>

            <div class="widget">
                <h3>Assigned Students</h3>
                <p>You have 0 students assigned</p>
                <a href="/proctor/students">View All Students</a>
            </div>

            <div class="widget">
                <h3>Recent Activities</h3>
                <p>No recent activities</p>
                <a href="/proctor/activities">View All Activities</a>
            </div>
        </div>

        <div class="widget ai-widget">
            <div class="widget-header">
                <h3><i class="fas fa-chart-line"></i> AI Student Analysis</h3>
            </div>
            <div class="widget-content">
                <p>Use AI to gain insights into student performance and provide better guidance.</p>
                
                <div class="ai-features">
                    <span class="ai-feature"><i class="fas fa-brain"></i> Performance insights</span>
                    <span class="ai-feature"><i class="fas fa-search"></i> Pattern detection</span>
                    <span class="ai-feature"><i class="fas fa-lightbulb"></i> Custom recommendations</span>
                </div>
                
                <div class="recent-students">
                    <h4>Quick Analysis</h4>
                    <select id="student-select" class="student-select">
                        <option value="">Select a student...</option>
                        <!-- This would be populated dynamically with your students -->
                    </select>
                    <button onclick="quickAnalyze()" class="analyze-btn">Analyze</button>
                </div>
                
                <div id="analysis-preview" class="analysis-preview"></div>
                
                <a href="/ai/proctor/analysis" class="ai-button">
                    <i class="fas fa-chart-pie"></i> Open Full AI Analysis
                </a>
            </div>
        </div>
        
    </div>

    <script>
        // Function to populate student dropdown
        function loadStudents() {
            const select = document.getElementById('student-select');
            
            // Make API request to get your students
            fetch('/api/proctor/students')
                .then(response => response.json())
                .then(data => {
                    if (data && data.students) {
                        data.students.forEach(student => {
                            const option = document.createElement('option');
                            option.value = student.id;
                            option.textContent = student.name;
                            select.appendChild(option);
                        });
                    }
                })
                .catch(error => {
                    console.error('Error loading students:', error);
                    // Fallback with sample data if API fails
                    const sampleStudents = [
                        { id: 1, name: 'John Doe' },
                        { id: 2, name: 'Jane Smith' },
                        { id: 3, name: 'Alex Johnson' }
                    ];
                    
                    sampleStudents.forEach(student => {
                        const option = document.createElement('option');
                        option.value = student.id;
                        option.textContent = student.name;
                        select.appendChild(option);
                    });
                });
            }
            
            // Function to analyze selected student
            function quickAnalyze() {
                const studentId = document.getElementById('student-select').value;
                const analysisBox = document.getElementById('analysis-preview');
                
                if (!studentId) {
                    alert('Please select a student first');
                    return;
                }
                
                // Show loading state
                analysisBox.style.display = 'block';
                analysisBox.textContent = 'Analyzing student data...';
                
                // Create sample performance data - in production this would come from your database
                const performanceData = {
                    assignments: [
                        { name: 'Assignment 1', score: 85, maxScore: 100 },
                        { name: 'Assignment 2', score: 92, maxScore: 100 }
                    ],
                    attendance: 90,
                    participationRate: 75
                };
                
                // Call the AI API
                fetch('/ai/proctor/analyze-student', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        studentId: studentId,
                        performanceData: performanceData
                    })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.analysis) {
                        // Show preview of analysis
                        const previewText = data.analysis.substring(0, 200) + 
                            (data.analysis.length > 200 ? '... (see full analysis)' : '');
                        analysisBox.textContent = previewText;
                    } else {
                        analysisBox.textContent = 'Analysis unavailable. Try the full analysis page.';
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    analysisBox.textContent = 'Error generating analysis. Please try again later.';
                });
            }
            
            // Load students when the page loads
            document.addEventListener('DOMContentLoaded', loadStudents);
            </script>

</body>

</html>